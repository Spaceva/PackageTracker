@using PackageTracker.Presentation.MVCApp.Controllers
@model PackageTracker.Messages.Queries.GetFrameworksQueryResponse
@{
    ViewData["Title"] = "Frameworks";
    ViewData.Add("RowClassIndex", 0);
}
<div class="d-flex flex-row justify-content-center align-items-center m-2">
    <button type="button" onclick="active()" class="btn btn-success btn-sm align-self-center"><i class="fa-solid fa-heart-circle-check"></i> Actifs uniquements</button>&nbsp;
    <button type="button" onclick="allframeworks()" class="btn btn-primary btn-sm align-self-center"><i class="fa-solid fa-globe"></i> Tous</button>
</div>
<table class="table table-striped table-sm table-bordered align-content-center text-center">
    <caption>Frameworks</caption>
    <thead class="bg-info">
        <tr>
            <th scope="col" colspan="2"><i class="fa-solid fa-tag"></i> Framework</th>
            <th scope="col"><i class="fa-solid fa-scroll"></i> Channel</th>
            <th scope="col"><i class="fa-solid fa-code-compare"></i> Version</th>
            <th scope="col"><i class="fa-solid fa-calendar-plus"></i> Release Date</th>
            <th scope="col" colspan="2"><i class="fa-solid fa-calendar-xmark"></i> End of Life</th>
            <th scope="col"><i class="fa-solid fa-heart"></i> Status</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
        @foreach (var framework in Model.Frameworks)
        {
            await Html.RenderPartialAsync("_FrameworkRow", framework, ViewData);
            ViewData["RowClassIndex"] = (int)(ViewData["RowClassIndex"]!) + 1;
        }
    </tbody>
</table>

<script type="text/javascript">
    const active = () => window.location = '@Url.Action(nameof(FrameworkController.Index))';
    const allframeworks = () => window.location = '@Url.Action(nameof(FrameworkController.All))';
</script>
