@using PackageTracker.Messages.Queries;
@using PackageTracker.Presentation.MVCApp.Controllers;
@model IEnumerable<GetLatestNotificationsQueryResponse.NotificationDto>
@{
    ViewData["Title"] = "Notifications";
    var readNotificationUrl = Url.Action(nameof(NotificationsController.Read), nameof(NotificationsController).Replace(nameof(Controller), string.Empty));
    var readAllNotificationsUrl = Url.Action(nameof(NotificationsController.ReadAll), nameof(NotificationsController).Replace(nameof(Controller), string.Empty));
}
<div class="d-flex flex-row justify-content-center align-items-center mb-2">
    <button type="button" class="btn btn-sm btn-primary" onclick="markAllAsRead()">
        <i class="fa-solid fa-envelope-circle-check"></i> Marquer tout comme lu
    </button>
</div>
<table class="table table-bordered table-hover">
    <caption>Notifications</caption>
    <thead class="align-content-center text-center">
        <tr class="bg-info">
            <th width="20%"><i class="fa-solid fa-clock"></i> Date & Heure locale</th>
            <th width="80%"><i class="fa-solid fa-message"></i> Message</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var notification in Model)
        {
            <tr id="notification-@notification.Id.ToString()" class="@(notification.IsRead ? "fst-normal":"fw-bold cursor-pointer")" onclick="markAsReadHere('@notification.Id.ToString()')">
                <td class="text-center">
                    @(new DateTimeOffset(notification.DateTime, TimeSpan.Zero).ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss"))
                </td>
                <td class="text-left">
                    @notification.Content
                </td>
            </tr>
        }
    </tbody>
</table>

<script type="text/javascript">
    const markAsReadHere = (id) => {
        $.ajax({
            data: { id: id },
            method: 'put',
            url: '@readNotificationUrl',
            success: function () {
                $("#notification-" + id).removeClass("fw-bold").removeClass("cursor-pointer");
            }
        });
    }

    const markAllAsRead = (id) => {
        $.ajax({
            data: {},
            method: 'post',
            url: '@readAllNotificationsUrl',
            success: function () {
                $("[id^='notification-']").removeClass("fw-bold").removeClass("cursor-pointer");
            }
        });
    }
</script>